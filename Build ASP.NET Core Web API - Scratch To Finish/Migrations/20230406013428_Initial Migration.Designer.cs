// <auto-generated />
using System;
using Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Migrations
{
    [DbContext(typeof(WalkDbContext))]
    [Migration("20230406013428_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");
                });

            modelBuilder.Entity("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Ragion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region_UmageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ragions");
                });

            modelBuilder.Entity("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Difficulty_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<Guid>("Ragion_IdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Region_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region_UmageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("Ragion_IdId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Walk", b =>
                {
                    b.HasOne("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Build_ASP.NET_Core_Web_API___Scratch_To_Finish.Domain.Ragion", "Ragion_Id")
                        .WithMany()
                        .HasForeignKey("Ragion_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Ragion_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
